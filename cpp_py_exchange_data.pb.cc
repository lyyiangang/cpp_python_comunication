// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cpp_py_exchange_data.proto

#include "cpp_py_exchange_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace yy {
class MsgToServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgToServer>
      _instance;
} _MsgToServer_default_instance_;
class MsgToClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgToClient>
      _instance;
} _MsgToClient_default_instance_;
}  // namespace yy
namespace protobuf_cpp_5fpy_5fexchange_5fdata_2eproto {
static void InitDefaultsMsgToServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yy::_MsgToServer_default_instance_;
    new (ptr) ::yy::MsgToServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yy::MsgToServer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgToServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgToServer}, {}};

static void InitDefaultsMsgToClient() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yy::_MsgToClient_default_instance_;
    new (ptr) ::yy::MsgToClient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yy::MsgToClient::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgToClient =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgToClient}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MsgToServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgToClient.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yy::MsgToServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yy::MsgToServer, msgmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yy::MsgToServer, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yy::MsgToServer, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yy::MsgToServer, imgbuffer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yy::MsgToClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yy::MsgToClient, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yy::MsgToClient, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yy::MsgToClient, actiontype_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::yy::MsgToServer)},
  { 9, -1, sizeof(::yy::MsgToClient)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::yy::_MsgToServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::yy::_MsgToClient_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "cpp_py_exchange_data.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032cpp_py_exchange_data.proto\022\002yy\"\201\001\n\013Msg"
      "ToServer\022%\n\007msgMode\030\001 \001(\0162\024.yy.MsgToServ"
      "er.Mode\022\r\n\005width\030\002 \001(\005\022\016\n\006height\030\003 \001(\005\022\021"
      "\n\timgBuffer\030\004 \003(\014\"\031\n\004Mode\022\010\n\004EXIT\020\000\022\007\n\003R"
      "UN\020\001\"@\n\013MsgToClient\022\r\n\005width\030\001 \001(\005\022\016\n\006he"
      "ight\030\002 \001(\005\022\022\n\nactionType\030\003 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 238);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cpp_py_exchange_data.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_cpp_5fpy_5fexchange_5fdata_2eproto
namespace yy {
const ::google::protobuf::EnumDescriptor* MsgToServer_Mode_descriptor() {
  protobuf_cpp_5fpy_5fexchange_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cpp_5fpy_5fexchange_5fdata_2eproto::file_level_enum_descriptors[0];
}
bool MsgToServer_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MsgToServer_Mode MsgToServer::EXIT;
const MsgToServer_Mode MsgToServer::RUN;
const MsgToServer_Mode MsgToServer::Mode_MIN;
const MsgToServer_Mode MsgToServer::Mode_MAX;
const int MsgToServer::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void MsgToServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgToServer::kMsgModeFieldNumber;
const int MsgToServer::kWidthFieldNumber;
const int MsgToServer::kHeightFieldNumber;
const int MsgToServer::kImgBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgToServer::MsgToServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cpp_5fpy_5fexchange_5fdata_2eproto::scc_info_MsgToServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:yy.MsgToServer)
}
MsgToServer::MsgToServer(const MsgToServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      imgbuffer_(from.imgbuffer_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&msgmode_, &from.msgmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&msgmode_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:yy.MsgToServer)
}

void MsgToServer::SharedCtor() {
  ::memset(&msgmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&msgmode_)) + sizeof(height_));
}

MsgToServer::~MsgToServer() {
  // @@protoc_insertion_point(destructor:yy.MsgToServer)
  SharedDtor();
}

void MsgToServer::SharedDtor() {
}

void MsgToServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgToServer::descriptor() {
  ::protobuf_cpp_5fpy_5fexchange_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cpp_5fpy_5fexchange_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgToServer& MsgToServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cpp_5fpy_5fexchange_5fdata_2eproto::scc_info_MsgToServer.base);
  return *internal_default_instance();
}


void MsgToServer::Clear() {
// @@protoc_insertion_point(message_clear_start:yy.MsgToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imgbuffer_.Clear();
  ::memset(&msgmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&msgmode_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool MsgToServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:yy.MsgToServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .yy.MsgToServer.Mode msgMode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msgmode(static_cast< ::yy::MsgToServer_Mode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes imgBuffer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_imgbuffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yy.MsgToServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yy.MsgToServer)
  return false;
#undef DO_
}

void MsgToServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yy.MsgToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yy.MsgToServer.Mode msgMode = 1;
  if (this->msgmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgmode(), output);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->height(), output);
  }

  // repeated bytes imgBuffer = 4;
  for (int i = 0, n = this->imgbuffer_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      4, this->imgbuffer(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:yy.MsgToServer)
}

::google::protobuf::uint8* MsgToServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:yy.MsgToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .yy.MsgToServer.Mode msgMode = 1;
  if (this->msgmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgmode(), target);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->height(), target);
  }

  // repeated bytes imgBuffer = 4;
  for (int i = 0, n = this->imgbuffer_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(4, this->imgbuffer(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yy.MsgToServer)
  return target;
}

size_t MsgToServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yy.MsgToServer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes imgBuffer = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->imgbuffer_size());
  for (int i = 0, n = this->imgbuffer_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->imgbuffer(i));
  }

  // .yy.MsgToServer.Mode msgMode = 1;
  if (this->msgmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgmode());
  }

  // int32 width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgToServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yy.MsgToServer)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgToServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgToServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yy.MsgToServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yy.MsgToServer)
    MergeFrom(*source);
  }
}

void MsgToServer::MergeFrom(const MsgToServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yy.MsgToServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  imgbuffer_.MergeFrom(from.imgbuffer_);
  if (from.msgmode() != 0) {
    set_msgmode(from.msgmode());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void MsgToServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yy.MsgToServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgToServer::CopyFrom(const MsgToServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yy.MsgToServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgToServer::IsInitialized() const {
  return true;
}

void MsgToServer::Swap(MsgToServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgToServer::InternalSwap(MsgToServer* other) {
  using std::swap;
  imgbuffer_.InternalSwap(CastToBase(&other->imgbuffer_));
  swap(msgmode_, other->msgmode_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgToServer::GetMetadata() const {
  protobuf_cpp_5fpy_5fexchange_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cpp_5fpy_5fexchange_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgToClient::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgToClient::kWidthFieldNumber;
const int MsgToClient::kHeightFieldNumber;
const int MsgToClient::kActionTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgToClient::MsgToClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cpp_5fpy_5fexchange_5fdata_2eproto::scc_info_MsgToClient.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:yy.MsgToClient)
}
MsgToClient::MsgToClient(const MsgToClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  actiontype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.actiontype().size() > 0) {
    actiontype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actiontype_);
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:yy.MsgToClient)
}

void MsgToClient::SharedCtor() {
  actiontype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
}

MsgToClient::~MsgToClient() {
  // @@protoc_insertion_point(destructor:yy.MsgToClient)
  SharedDtor();
}

void MsgToClient::SharedDtor() {
  actiontype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgToClient::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgToClient::descriptor() {
  ::protobuf_cpp_5fpy_5fexchange_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cpp_5fpy_5fexchange_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgToClient& MsgToClient::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cpp_5fpy_5fexchange_5fdata_2eproto::scc_info_MsgToClient.base);
  return *internal_default_instance();
}


void MsgToClient::Clear() {
// @@protoc_insertion_point(message_clear_start:yy.MsgToClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actiontype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool MsgToClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:yy.MsgToClient)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 width = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string actionType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actiontype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->actiontype().data(), static_cast<int>(this->actiontype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "yy.MsgToClient.actionType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yy.MsgToClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yy.MsgToClient)
  return false;
#undef DO_
}

void MsgToClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yy.MsgToClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 width = 1;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->width(), output);
  }

  // int32 height = 2;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->height(), output);
  }

  // string actionType = 3;
  if (this->actiontype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actiontype().data(), static_cast<int>(this->actiontype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "yy.MsgToClient.actionType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->actiontype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:yy.MsgToClient)
}

::google::protobuf::uint8* MsgToClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:yy.MsgToClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 width = 1;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->width(), target);
  }

  // int32 height = 2;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->height(), target);
  }

  // string actionType = 3;
  if (this->actiontype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actiontype().data(), static_cast<int>(this->actiontype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "yy.MsgToClient.actionType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->actiontype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yy.MsgToClient)
  return target;
}

size_t MsgToClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yy.MsgToClient)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string actionType = 3;
  if (this->actiontype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->actiontype());
  }

  // int32 width = 1;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 2;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgToClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yy.MsgToClient)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgToClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgToClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yy.MsgToClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yy.MsgToClient)
    MergeFrom(*source);
  }
}

void MsgToClient::MergeFrom(const MsgToClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yy.MsgToClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.actiontype().size() > 0) {

    actiontype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actiontype_);
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void MsgToClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yy.MsgToClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgToClient::CopyFrom(const MsgToClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yy.MsgToClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgToClient::IsInitialized() const {
  return true;
}

void MsgToClient::Swap(MsgToClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgToClient::InternalSwap(MsgToClient* other) {
  using std::swap;
  actiontype_.Swap(&other->actiontype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(width_, other->width_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgToClient::GetMetadata() const {
  protobuf_cpp_5fpy_5fexchange_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cpp_5fpy_5fexchange_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace yy
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::yy::MsgToServer* Arena::CreateMaybeMessage< ::yy::MsgToServer >(Arena* arena) {
  return Arena::CreateInternal< ::yy::MsgToServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::yy::MsgToClient* Arena::CreateMaybeMessage< ::yy::MsgToClient >(Arena* arena) {
  return Arena::CreateInternal< ::yy::MsgToClient >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
